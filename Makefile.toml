[env]
# Environment variable settings for build
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS = ["kernel", "user/lib/std", "user/bin"]

[config]
default_task = "build"
skip_core_tasks = true

[tasks.build]
description = "Build all components (default: debug)"
dependencies = ["build-debug"]

[tasks.build-debug]
description = "Build all components in debug mode"
dependencies = ["build-kernel-debug", "build-userlib-debug", "build-userbin-debug", "build-initramfs-debug", "build-rootfs"]

[tasks.build-release]
description = "Build all components in release mode"
dependencies = ["build-kernel-release", "build-userlib-release", "build-userbin-release", "build-initramfs-release", "build-rootfs"]

[tasks.build-kernel]
description = "Build the kernel (default: debug)"
dependencies = ["build-kernel-debug"]

[tasks.build-kernel-debug]
description = "Build the kernel in debug mode"
cwd = "kernel"
command = "cargo"
args = ["build"]

[tasks.build-kernel-release]
description = "Build the kernel in release mode"
cwd = "kernel"
command = "cargo"
args = ["build", "--release"]

[tasks.build-userlib]
description = "Build user libraries (default: debug)"
dependencies = ["build-userlib-debug"]

[tasks.build-userlib-debug]
description = "Build user libraries in debug mode"
cwd = "user/lib"
command = "cargo"
args = ["make", "build-userlib-debug"]

[tasks.build-userlib-release]
description = "Build user libraries in release mode"
cwd = "user/lib"
command = "cargo"
args = ["make", "build-userlib-release"]

[tasks.build-userbin]
description = "Build user programs (default: debug)"
dependencies = ["build-userbin-debug"]

[tasks.build-userbin-debug]
description = "Build user programs in debug mode"
cwd = "user/bin"
command = "cargo"
args = ["make", "build"]
dependencies = ["build-userlib-debug"]

[tasks.build-userbin-release]
description = "Build user programs in release mode"
cwd = "user/bin"
command = "cargo"
args = ["make", "build-release"]
dependencies = ["build-userlib-release"]

[tasks.clean]
description = "Clean all build artifacts"
dependencies = ["clean-kernel", "clean-userlib", "clean-userbin", "clean-initramfs", "clean-rootfs"]

[tasks.clean-kernel]
description = "Clean kernel build artifacts"
cwd = "kernel"
command = "cargo"
args = ["clean"]

[tasks.clean-userlib]
description = "Clean user library build artifacts"
cwd = "user/lib"
command = "cargo"
args = ["make", "clean"]

[tasks.clean-userbin]
description = "Clean user program build artifacts"
cwd = "user/bin"
command = "cargo"
args = ["clean"]

[tasks.test]
description = "Run tests"
dependencies = ["test-kernel"]

[tasks.test-kernel]
description = "Run kernel tests"
dependencies = ["test-kernel-riscv64"]

[tasks.test-kernel-riscv64]
description = "Run kernel tests (RISC-V)"
cwd = "kernel"
env = { "CARGO_TARGET_RISCV64GC_UNKNOWN_NONE_ELF_RUNNER" = "tools/test.sh" }
command = "cargo"
args = ["test"]
dependencies = ["build-initramfs"]

[tasks.test-kernel-aarch64]
description = "Run kernel tests (AArch64)"
cwd = "kernel"
env = { "CARGO_TARGET_AARCH64_UNKNOWN_NONE_ELF_RUNNER" = "tools/test_aarch64.sh" }
command = "cargo"
args = ["test", "--target", "targets/aarch64-unknown-none-elf.json"]
dependencies = ["build-initramfs"]

[tasks.run]
description = "Run the kernel in release mode"
dependencies = ["run-riscv64"]

[tasks.run-riscv64]
description = "Run the kernel in release mode (RISC-V)"
cwd = "kernel"
command = "cargo"
args = ["run", "--release"]
dependencies = ["build-release"]

[tasks.run-aarch64]
description = "Run the kernel in release mode (AArch64)"
cwd = "kernel"
command = "cargo"
args = ["run", "--release", "--target", "targets/aarch64-unknown-none-elf.json"]
dependencies = ["build-release"]

[tasks.run-debug]
description = "Run the kernel in debug mode"
dependencies = ["run-debug-riscv64"]

[tasks.run-debug-riscv64]
description = "Run the kernel in debug mode (RISC-V)"
cwd = "kernel"
command = "cargo"
args = ["run"]
dependencies = ["build-debug"]

[tasks.run-debug-aarch64]
description = "Run the kernel in debug mode (AArch64)"
cwd = "kernel"
command = "cargo"
args = ["run", "--target", "targets/aarch64-unknown-none-elf.json"]
dependencies = ["build-debug"]

[tasks.debug]
description = "Run the kernel in debug mode"
dependencies = ["debug-riscv64"]

[tasks.debug-riscv64]
description = "Run the kernel in debug mode (RISC-V)"
cwd = "kernel"
command = "./tools/run.sh"
args = ["--debug", "target/riscv64gc-unknown-none-elf/debug/kernel"]
dependencies = ["build-debug"]

[tasks.debug-aarch64]
description = "Run the kernel in debug mode (AArch64)"
cwd = "kernel"
command = "./tools/run_aarch64.sh"
args = ["--debug", "target/aarch64-unknown-none-elf/debug/kernel"]
dependencies = ["build-debug"]

[tasks.debug-test]
description = "Run kernel tests in debug mode with gdb"
dependencies = ["debug-test-riscv64"]

[tasks.debug-test-riscv64]
description = "Run kernel tests in debug mode with gdb (RISC-V)"
cwd = "kernel"
env = { "CARGO_TARGET_RISCV64GC_UNKNOWN_NONE_ELF_RUNNER" = "tools/test.sh" }
command = "cargo"
args = ["test", "--", "--debug"]
dependencies = ["build-initramfs-debug"]

[tasks.debug-test-aarch64]
description = "Run kernel tests in debug mode with gdb (AArch64)"
cwd = "kernel"
env = { "CARGO_TARGET_AARCH64_UNKNOWN_NONE_ELF_RUNNER" = "tools/test_aarch64.sh" }
command = "cargo"
args = ["test", "--target", "targets/aarch64-unknown-none-elf.json", "--", "--debug"]
dependencies = ["build-initramfs-debug"]

[tasks.doc]
description = "Generate documentation for all components"
dependencies = ["doc-kernel", "doc-userlib"]

[tasks.doc-kernel]
description = "Generate kernel documentation"
cwd = "kernel"
command = "cargo"
args = ["doc", "--no-deps", "--document-private-items"]

[tasks.doc-userlib]
description = "Generate user library documentation"
cwd = "user/lib"
command = "cargo"
args = ["make", "doc"]

[tasks.build-initramfs]
description = "Create initramfs archive (default: debug)"
cwd = "mkfs"
command = "sh"
args = ["make_initramfs.sh"]
dependencies = ["build-userbin-debug"]

[tasks.build-initramfs-release]
description = "Create initramfs archive in release mode"
cwd = "mkfs"
command = "sh"
args = ["make_initramfs.sh"]
dependencies = ["build-userbin-release"]

[tasks.build-initramfs-debug]
description = "Create initramfs archive in debug mode"
cwd = "mkfs"
command = "sh"
args = ["make_initramfs.sh"]
dependencies = ["build-userbin-debug"]

[tasks.clean-initramfs]
description = "Clean initramfs archive"
cwd = "mkfs"
command = "sh"
args = ["clean_initramfs.sh"]

[tasks.build-rootfs]
description = "Create rootfs.img if it doesn't exist"
cwd = "mkfs"
command = "sh"
args = ["make_rootfs.sh"]
condition = { files_not_exist = ["dist/rootfs.img"] }

[tasks.clean-rootfs]
description = "Clean rootfs.img"
cwd = "mkfs"
command = "sh"
args = ["clean_rootfs.sh"]
